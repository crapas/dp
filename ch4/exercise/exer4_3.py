# n이 홀수 일 때는 배치할 수 없습니다. n X 3은 홀수이므로 쉽게 알 수 있습니다.
# n = 1일 때는 0입니다.
# n = 2일 때는 3 입니다. (아래 그림에서 가로 모양 배치를 <>로 표현하였습니다.)
#   <>   ||   <>
#   <>   ||   ||
#   <>   <>   ||
# n X 3의 공간을 배치하는 방법의 수를 dp(n)이라고 표현합니다.
# n X 3 의 공간을 채울 때는 다음과 같이 나누어 생각할 수 있습니다.
#    (n - 2) X 3 공간을 채운 후 2 X 3을 채우는 경우 - dp(n - 2) * dp(2)
#    (n - 2) X 3 공간을 채우지 않고 n X 3을 채우는 경우
#        예를 들어 이런 경우입니다. 
#         n = 4의 경우
#         <><> |<>|   <><><>  |<><>|
#         |<>| |<>|   |<><>|  |<><>|
#         |<>| <><>   |<><>|  <><><>
#         n = 6의 경우 중 첫 번째 분류
#         <><><>  |<><>|  
#         |<><>|  |<><>|
#         |<><>|  <><><>
#         n = 6의 경우 중 두 번째 분류 -> 2 X 3을 채우고 2 X 4를 특수하게 채우는 경우
#         <> <><>   <> |<>|   || <><>  || |<>|  <> <><>  <> |<>|  
#         <> |<>|   <> |<>|   || |<>|  || |<>|  || |<>|  || |<>|
#         <> |<>|   <> <><>   <> |<>|  <> <><>  || |<>|  || <><>
#         첫 번째 분류의 경우는 모든 짝수 n에 대해서 두 가지 경우만 존재할 수 있습니다.
#         두 번째 분류의 경우는 dp(2)를 배치하고 난 다음 n = 4의 특수한 경우를 추가 배치하는 경우입니다.
#     n = 8일 때는 
#         6 X 3를 채우고 3 X 2를 채우는 경우 - dp(6) * dp(2)
#         8 X 3을 특수하게 채우는 경우 - 2가지
#         4 X 3을 채우고 4 X 3을 특수하게 채우는 경우 - dp(4) * 2
#            4 X 3을 채우고 난 후에 4 X 3을 그냥 모두 채우면 이는 첫 번째 경우와 중복되는 부분이 있습니다.
#         2 X 3층 채우고 6 X 3을 특수하게 채우는 경우 - dp(2) * dp(6)

#     그러므로 n > 4인 짝수일 때 다음 세 가지 경우의 합으로 dp(n)을 구할 수 있습니다.
#         dp(n - 2) * dp(2)
#         2 (특수하게 8 X 3 채우기)         
#         dp(2) * 2  + dp(4) * 2 + ... dp(n - 4) * 2

def count_ways_3by1(n):
    if n == 1:
        return 0

    dp = [0] * (n + 1)
    dp[0] = 1   
    dp[1] = 0
    dp[2] = 3
    # n이 홀수인 경우 dp[1]로 파생되는 루프의 모든 계산의 결과가 0이 됩니다. 
    # 다만 조금 더 빠른 결과를 위해서 홀수 확인하고 바로 0을 반환해도 됩니다.
    for i in range(3, n + 1):
        # dp(n - 2) * dp(2)
        dp[i] = dp[i - 2] * dp[2]
        # (n - 2) X 3 공간을 채우지 않고 n X 3을 만드는 경우
        # 첫 번째 분류는 항상 2가지 경우이므로 dp[0]의 값을 1로 정의하고
        # 하나의 루프로 계산해 버렸습니다.
        for j in range(4, i + 1, 2):
            dp[i] += dp[i - j] * 2
    return dp[n]

n = int(input('공간의 가로 길이를 입력하세요 : '))
print('%dx2 공간에 타일을 놓을 수 있는 경우의 수는 %d입니다.' % (n, count_ways_3by1(n)))
